name: .NET Core Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize ]


env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGE_PATH: ${{ github.workspace }}/.nuget/packages

jobs:

#  lint:
#    name: Lint Code
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        fetch-depth: 1
#    - name: Setup .NET Core SDK
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 3.1
#    - name: Restore Tools
#      run: |
#        dotnet tool restore
#        dotnet tool install -g dotnet-format
#    - name: Add Problem Matcher for dotnet-format
#      uses: xt0rted/dotnet-format-problem-matcher@v1
#    - name: Lint
#      run: dotnet format --check

  build:
    name: Test .NET Side by Side
    runs-on: windows-latest
    env:
      config: 'Release'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    # Setup package cache
    - uses: actions/cache@v2
      with:
        path: ${{ env.NUGET_PACKAGE_PATH }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    # Setup .NET frameworks
    - name: Setup .NET Core 2.1
      uses: actions/setup-dotnet@v1
      with:
       dotnet-version: '2.1'
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
       dotnet-version: '3.1'
    - name: Setup .NET Core 5.0
      uses: actions/setup-dotnet@v1
      with:
       dotnet-version: '5.0'

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1

    # install dependencies 
    - name: NuGet Restore
      run: nuget restore ZotapaySDK.sln
      
    # build project
    - name: Build
      run: dotnet build --configuration ${{env.config}} --no-restore
      
    # run tests with built project
    - name: Test
      run: |
        dotnet test --framework netcoreapp2.1 --no-restore --no-build --configuration ${{env.config}} --logger GitHubActions
        dotnet test --framework netcoreapp3.1 --no-restore --no-build --configuration ${{env.config}}
        dotnet test --framework net5.0 --no-restore --no-build --configuration ${{env.config}} --settings coverlet.runsettings

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: "!**/.nuget/packages/**/*.*"
